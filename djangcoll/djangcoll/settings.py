"""
Django settings for djangcoll project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
from os import path, getenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

DOMAIN = getenv('DOMAIN', 'http://127.0.0.1:8000')

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = getenv('DJANGO_SECRET', "django-insecure-9)k$q=jq6plz=l&=s3ucbz5eo&m97s&5fj6h)*a=^(2qy^9%()")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = getenv('DJANGO_DEBUG_MODE', True) in ("True", "true", "1", 1, "yes", "y", True)

ALLOWED_HOSTS = ['localhost', '127.0.0.1', getenv('DOMAIN_WITHOUT_PROTOCOL', '127.0.0.1:8000')]


# Application definition

INSTALLED_APPS = [
    "imgcoll.apps.ImgcollConfig",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "djangcoll.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "djangcoll.wsgi.application"

CSRF_TRUSTED_ORIGINS = [DOMAIN]

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': getenv('DJANGO_DB_ENGINE', 'django.db.backends.sqlite3'),
        'NAME': getenv('DB_NAME', BASE_DIR.joinpath('db.sqlite3')),
    }
}
e = getenv('DB_USER')
if e:
    DATABASES['default']['USER'] = e
e = getenv('DB_PASSWORD')
if e:
    DATABASES['default']['PASSWORD'] = e
e = getenv('DB_HOST')
if e:
    DATABASES['default']['HOST'] = e
e = getenv('DB_PORT')
if e:
    DATABASES['default']['PORT'] = e


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = getenv('DJANGO_LANGUAGE_CODE', 'de')

TIME_ZONE = getenv('DJANGO_TIME_ZONE', 'Europe/Berlin')

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"
e = getenv('DJANGO_STATIC_ROOT')
if e:
    STATIC_ROOT = e

# Base url to serve media files
MEDIA_URL = 'media/'

# Path where media is stored
MEDIA_ROOT = getenv('DJANGO_STATIC_MEDIA', BASE_DIR.joinpath('media'))

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
